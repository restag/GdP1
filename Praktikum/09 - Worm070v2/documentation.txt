This is the documentation of the current state of the worm game

********************************************
********************************************
board_controller
********************************************
defines - board_controller
********************************************

********************************************
typedefs - board_controller
********************************************

********************************************
functions - board_controller
********************************************


********************************************
********************************************
* board_model
********************************************
defines - board_model
********************************************
BOARD_MIN_WIDTH

********************************************
typedefs - board_model
********************************************
board_t
boardcodes_t
colorpairs_t
pos_t

********************************************
functions - board_model
********************************************


********************************************
structs - board_model
********************************************


********************************************
* game_controller
********************************************
defines - game_controller
********************************************

********************************************
typedefs - game_controller
********************************************

********************************************
functions - game_controller
********************************************


********************************************
* message_model
********************************************
defines - message_model
********************************************

********************************************
typedefs - message_model
********************************************
message_t

********************************************
functions - message_model
********************************************
message_t* allocMessage()
void freeMessage(message_t* aMessage)
void freeMsgString(char* aMsgString)
void setMsgString(message_t* aMessage, char* aMsgString)
char* getMsgString(message_t* aMessage)

********************************************
* messagearea_controller
********************************************
functions - messagearea_controller
********************************************
messagearea_t* initializeMessagearea()
void freeMessageareaAndContent(messagearea_t* aMessagearea)
void moveMessageareaToIndex(messagearea_t* aMessagearea, int lineIndex)
void clearLineInMessageArea(messagearea_t* aMessagearea, int lineNumber)
void setAllMessagesWithStrings(messagearea_t* aMessagearea, char* string1, char* string2, char* string3)
void updateWormStatus(messagearea_t* aMessagearea, board_t* aBoard, worm_t* aWorm)
void printMessagearea(messagearea_t* aMessagearea)
int printDialog(messagearea_t* aMessagearea, char* promt1, char* prompt2, char* prompt3)
void eraseMessagelineInDisplay(messagearea_t* aMessagearea, int lineNumber)
void printMessageline(messagearea_t* aMessagearea, int lineNumber);
AllMessage

********************************************
* messagearea_model
********************************************
defines - messagearea_model
********************************************
MESSAGEAREA_MIN_HEIGHT
MESSAGEAREA_MAX_MESSAGES
MESSAGEAREA_BLANKS_RESERVED_LEFT
MASSAGEAREA_BLANKS_RESERVED_RIGHT

********************************************
typedefs - messagearea_model
********************************************
messagearea_t
messagecodes_t

********************************************
functions - messagearea_model
********************************************
messagearea_t* allocMessagearea
void freeMessagearea(messagearea_t* aMessagearea)
void setMessageareaBaseIndex(messagearea_t* aMessagearea, int lineIndex)
void setMessagecode(messagearea_t* aMessagearea, messagecodes_t aMessagecode)
void setMessageAtLine(messagearea_t* aMessagearea, message_t* aMessage, int lineNumber)
int getMessageareaBaseIndex(messagearea_t* aMessagearea,)
messagecodes_t getMessagecode(messagearea_t* aMessagearea)
message_t* getMessageAtLine(messagearea_t* aMessagearea, int lineNumber)

********************************************
* prep
********************************************
defines - prep
********************************************
WINDOW_MIN_HEIGHT

********************************************
typedefs - prep
********************************************

********************************************
functions - prep
********************************************
void initializeCursesApp()
void cleanupCursesApp()
bool windowFitsMessageArea()
bool windowFitsMessageAreaAndBoard()
void initializeColors()

********************************************
* userinteraction_controler
********************************************
fuctions - userinteraction_controler
********************************************


********************************************
********************************************
* worm
********************************************
functions - worm
********************************************
int main()


********************************************
********************************************
* worm_controller
********************************************
functions - worm_controller
********************************************

********************************************
********************************************
worm_model
********************************************
defines - worm_model
********************************************

********************************************
typedef - worm_model
********************************************

********************************************
functions - worm_model
********************************************


********************************************
global vars
********************************************
